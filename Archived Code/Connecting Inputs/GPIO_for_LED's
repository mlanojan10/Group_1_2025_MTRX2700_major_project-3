#include "stm32f303xc.h"
#include "led.h"

extern volatile uint8_t game_progress;

void GPIO_Signal_Init(void) {
    // 1. Enable GPIOA clock
    RCC->AHBENR |= RCC_AHBENR_GPIOAEN;

    // 2. Configure PA7 as output
    GPIOA->MODER &= ~(3 << (7 * 2));
    GPIOA->MODER |=  (1 << (7 * 2)); // Output mode
    GPIOA->OTYPER &= ~(1 << 7);      // Push-pull
    GPIOA->OSPEEDR |= (3 << (7 * 2));// High speed
    GPIOA->PUPDR &= ~(3 << (7 * 2)); // No pull-up/down

    // 3. Configure PA6 as input
    GPIOA->MODER &= ~(3 << (6 * 2)); // Input mode
    GPIOA->PUPDR &= ~(3 << (6 * 2)); // No pull-up/down
}

void ledmodule(void) {
    GPIO_Signal_Init();

    // Output HIGH on PA7 to indicate module start
    GPIOA->ODR |= (1 << 7);

    printf("\r\nWaiting for signal on PA6 from other board...\r\n");

    // Wait until PA6 input goes HIGH
    while (!(GPIOA->IDR & (1 << 6))) {
        // Could include timeout or delay logic if needed
    }

    // Input received
    printf("\r\nLED module completed successfully!\r\n");
    game_progress |= 0b0100;
}
